-- BRANCH--
DROP TABLE IF EXISTS branch;
CREATE TABLE IF NOT EXISTS branch
(
br_code INT(11) UNIQUE AUTO_INCREMENT NOT NULL ,
br_street VARCHAR(30) NOT NULL,
br_num INT(4) NOT NULL,
br_city varchar(30),
PRIMARY KEY(br_code)
);

-- WORKER--
DROP TABLE IF EXISTS worker;
CREATE TABLE IF NOT EXISTS worker (
  wrk_AT char(10) NOT NULL,
  wrk_name varchar(20) NOT NULL,
  wrk_lname varchar(20) NOT NULL,
  wrk_salary float(7,2) NOT NULL,
  wrk_br_code int NOT NULL,
  PRIMARY KEY (wrk_AT),
  CONSTRAINT worker_fk1 FOREIGN KEY (wrk_br_code) REFERENCES branch(br_code) ON DELETE CASCADE ON UPDATE CASCADE
);

-- GUIDE--
DROP TABLE IF EXISTS guide;
CREATE TABLE IF NOT EXISTS guide
(
gui_AT CHAR(10) UNIQUE NOT NULL,
gui_cv TEXT ,
PRIMARY KEY (gui_AT),
CONSTRAINT FOREIGN KEY (gui_AT) REFERENCES worker(wrk_AT)
);

-- ADMIN--
DROP TABLE IF EXISTS admin;
CREATE TABLE IF NOT EXISTS admin
( 
adm_AT CHAR(10) NOT NULL UNIQUE,
adm_type ENUM('LOGISTICS','ADMINISTRATIVE','ACCOUNTING') NOT NULL,
adm_diploma VARCHAR(200) NOT NULL,
PRIMARY KEY (adm_AT),
CONSTRAINT adm_fk1 FOREIGN KEY (adm_AT) REFERENCES worker(wrk_AT)
ON UPDATE CASCADE ON DELETE CASCADE
);

-- DRIVER--
DROP TABLE IF EXISTS driver;
CREATE TABLE IF NOT EXISTS driver
(
drv_AT CHAR(10) UNIQUE NOT NULL,
drv_license ENUM('A','B','C','D') NOT NULL,
drv_route ENUM('LOCAL','ABROAD') NOT NULL,
drv_experience TINYINT(4),
PRIMARY KEY(drv_AT),
CONSTRAINT drv_fk FOREIGN KEY (drv_AT) REFERENCES worker(wrk_AT)
ON UPDATE CASCADE ON DELETE CASCADE
);

-- TRIP--
DROP TABLE IF EXISTS trip;
CREATE TABLE IF NOT EXISTS trip 
(
tr_id INT(11)  NOT NULL AUTO_INCREMENT,
tr_departure DATETIME NOT NULL,
tr_return DATETIME NOT NULL,
tr_maxseats tinyint(4) NOT NULL,
tr_cost FLOAT(7,2) NOT NULL,
tr_br_code INT(11) NOT NULL,
tr_gui_AT CHAR (10) NOT NULL,
tr_drv_AT CHAR (10) NOT NULL,
PRIMARY KEY(tr_id), 
CONSTRAINT tr_guifk FOREIGN KEY (tr_gui_AT) REFERENCES guide(gui_AT) ,
CONSTRAINT tr_br_code_fk FOREIGN KEY (tr_br_code) REFERENCES branch(br_code),
CONSTRAINT tr_drvfk FOREIGN KEY (tr_drv_AT) REFERENCES driver(drv_AT)
ON UPDATE CASCADE ON DELETE CASCADE);

-- EVENT--
DROP TABLE IF EXISTS Event;
CREATE TABLE IF NOT EXISTS Event(
ev_tr_id INT(11) NOT NULL,
ev_start DATETIME NOT NULL,
ev_end DATETIME NOT NULL,
ev_descr TEXT,
PRIMARY KEY(ev_tr_id,ev_start),
CONSTRAINT ev_tr_id_fk FOREIGN KEY (ev_tr_id) REFERENCES trip(tr_id)
ON UPDATE CASCADE ON DELETE CASCADE
);


-- PHONES--
DROP TABLE IF EXISTS phones;
CREATE TABLE IF NOT EXISTS phones
(
ph_br_code INT(11) UNIQUE NOT NULL ,
ph_number CHAR(10) NOT NULL,
PRIMARY KEY(ph_br_code,ph_number),
CONSTRAINT ph_br_code_fk FOREIGN KEY (ph_br_code) REFERENCES branch(br_code)
ON UPDATE CASCADE ON DELETE CASCADE
);


-- DESTINATION--
DROP TABLE IF EXISTS destination;
CREATE TABLE IF NOT EXISTS destination 
(
dst_id INT(11) UNIQUE AUTO_INCREMENT NOT NULL ,
dst_name VARCHAR(50) NOT NULL,
dst_descr text,
dst_rtype enum('LOCAL','ABROAD') DEFAULT NULL,
dst_location INT(11)  NOT NULL,
dst_language VARCHAR(30),
PRIMARY KEY (dst_id),
CONSTRAINT dst_location_fk FOREIGN KEY (dst_location) REFERENCES destination(dst_id)  -- self reference edw--
ON UPDATE CASCADE ON DELETE CASCADE
);

-- TRAVEL_TO--
DROP TABLE IF EXISTS travel_to;
CREATE TABLE IF NOT EXISTS travel_to
(
to_tr_id INT(11)   NOT NULL,
to_dst_id INT (11)  NOT NULL,
to_arrival DATETIME NOT NULL,
to_departure DATETIME NOT NULL,
PRIMARY KEY (to_tr_id,to_dst_id),
CONSTRAINT to_tr_id_FK FOREIGN KEY (to_tr_id) REFERENCES trip(tr_id),
CONSTRAINT  to_dst_id_fk FOREIGN KEY (to_dst_id) REFERENCES destination(dst_id)
ON UPDATE CASCADE ON DELETE CASCADE
);


-- RESERVATION--
DROP TABLE IF EXISTS reservation;
CREATE TABLE IF NOT EXISTS reservation
(
res_tr_id INT(11)   NOT NULL,
res_seatnum tinyint(4) NOT NULL,
res_name VARCHAR(20) NOT NULL,
res_lname VARCHAR(20) NOT NULL,
res_isadult ENUM('ADULT','MINOR') NOT NULL,
PRIMARY KEY(res_tr_id,res_seatnum),
CONSTRAINT res_tr_id_FK FOREIGN KEY (res_tr_id) REFERENCES trip(tr_id)
ON UPDATE CASCADE ON DELETE CASCADE
);


-- MANAGER--
DROP TABLE IF EXISTS manages;
CREATE TABLE IF NOT EXISTS manages
( 
mng_adm_AT CHAR(10) UNIQUE NOT NULL,
mng_br_code INT(11) UNIQUE NOT NULL,
PRIMARY KEY(mng_adm_AT,mng_br_code),
CONSTRAINT mng_adm_AT_fk FOREIGN KEY (mng_adm_AT) REFERENCES admin(adm_AT),
CONSTRAINT mng_br_code_fk FOREIGN KEY (mng_br_code) REFERENCES branch(br_code)
ON UPDATE CASCADE ON DELETE CASCADE
);



-- LANGUAGES --
DROP TABLE IF EXISTS languages;
CREATE TABLE IF NOT EXISTS languages
( 
lng_gui_AT CHAR(10) UNIQUE NOT NULL,
lng_language varchar(30) NOT NULL DEFAULT 'UNKNOWN',
PRIMARY KEY (lng_gui_AT),
CONSTRAINT lng_gui_AT_fk FOREIGN KEY (lng_gui_AT) REFERENCES guide(gui_AT)
ON UPDATE CASCADE ON DELETE CASCADE
);